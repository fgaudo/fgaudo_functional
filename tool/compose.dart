import 'dart:io';

const int N = 50;

void generatePipe(StringBuffer buffer) {
  for (var i = 1; i < N; ++i) {
    buffer.write('A${i + 1} pipe${i + 1}<');

    for (var j = 1; j <= i + 1; ++j) {
      buffer.write('A$j');

      if (j != (i + 1)) {
        buffer.write(',');
      }
    }

    buffer.write('>(A1 a1, ');

    for (var j = 1; j <= i; ++j) {
      buffer.write('A${j + 1} Function(A$j) f$j,');
    }

    buffer.write(') => ');

    for (var j = i; j >= 1; --j) {
      buffer.write('f$j(');
    }

    buffer.write('a1');

    for (var j = 1; j <= i; ++j) {
      if (j != 1) {
        buffer.write(',');
      }
      buffer.write(')');
    }

    buffer.write(';\n\n');
  }
}

void generateFlow(StringBuffer buffer) {
  for (var i = 2; i < N; ++i) {
    buffer.write('A${i + 1} Function(A1) flow$i<');

    for (var j = 1; j <= i + 1; ++j) {
      buffer.write('A$j');

      if (j != (i + 1)) {
        buffer.write(',');
      }
    }

    buffer.write('>(');

    for (var j = 1; j <= i; ++j) {
      buffer.write('A${j + 1} Function(A$j) f$j,');
    }

    buffer.write(') => (a1) => ');

    for (var j = i; j >= 1; --j) {
      buffer.write('f$j(');
    }

    buffer.write('a1');

    for (var j = 1; j <= i; ++j) {
      if (j != 1) {
        buffer.write(',');
      }
      buffer.write(')');
    }

    buffer.write(';\n\n');
  }
}

void main() {
  final buffer = StringBuffer()
    ..write('// GENERATED BY script/compose.dart\n\n');

  generatePipe(buffer);
  generateFlow(buffer);

  File('lib/src/common.g.dart').writeAsStringSync(
    buffer.toString(),
  );
}
